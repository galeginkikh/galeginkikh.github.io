[{"authors":null,"categories":null,"content":"Leginkikh Galina is a student of RUDN. She really likes to volunteer, solve problems in mathematics and physics. She graduated from the school of counselors. In his spare time he reads foreign literature.\n  Download my resumé.\n","date":1652400000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1652400000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Leginkikh Galina is a student of RUDN. She really likes to volunteer, solve problems in mathematics and physics. She graduated from the school of counselors. In his spare time he reads foreign literature.","tags":null,"title":"Galina Leginkikh","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Galina Leginkikh"],"categories":["Demo"],"content":"My week 09.05.2022 - 15.05.2022  This week started with a holiday. This is the day of victory. On this day, I had a fairly rich program. It was on this day that I returned to Moscow after a vacation. On the evening of May 9, there was a stunning solute.\n   Then, after a week of rest, I started training. It was necessary to complete and hand over all the debts. I did two more OS labs in advance. On the OS, I learned to work with two editors vi and emacs.\n   I also devoted a lot of time to French.\n   This week has been quite productive.\n","date":1652400000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652400000,"objectID":"3897ba3110858b1ae10b1e16efbd41e2","permalink":"https://example.com/post/getting-started-%D0%B4%D1%80%D1%83%D0%B3%D0%B0%D1%8F-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","publishdate":"2022-05-13T00:00:00Z","relpermalink":"/post/getting-started-%D0%B4%D1%80%D1%83%D0%B3%D0%B0%D1%8F-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","section":"post","summary":"This week started with a holiday.","tags":["Academic"],"title":"My week 09.05.2022 - 15.05.2022 (Этап 4)","type":"post"},{"authors":["Galina Leginkikh"],"categories":["Demo"],"content":"Report in markdown  Report:\n Title page Content Target Theoretical introduction Completing of the work Conclusion  Markdown is a lightweight markup language that is a tool for converting code to HTML.\nThe main feature of this language is the simplest syntax, which serves to simplify writing and reading markup code, which, in turn, makes it easy to correct it.\nNow let’s take a closer look at the functions of the Markdown markup language.\n Block elements    Paragraphs and line breaks;\n  Headlines;\n  Quotes;\n  Lists;\n  Code blocks;\n  Horizontal (dividing) lines.\n  Lowercase elements    Links;\n  Text selection;\n  Code fragments of strings;\n  Images.\n  SYNTAX DESCRIPTION Paragraphs and line breaks In order to create a paragraph using the syntax of the Markdown language, it is enough to separate the lines of text with one (or more) empty line (any line that contains nothing but spaces and tab characters is considered empty).\nIn order to insert a visible line break (the \u0026lt;br/\u0026gt; element), you must end the line with two spaces and press the “Enter” key.\nMany elements of the Markdown syntax look and work much better when they are formatted using “hard line translation” (line separation performed by the user himself, and not by the program automatically). Such elements include quotes, lists, etc.\nHeadlines The Markdown markup language supports 2 styles of heading designations: underlining and highlighting with a symbol (\u0026#34;#\u0026#34;).\nHeadings are highlighted using underscores with equal signs (\u0026#34;=\u0026#34;) if the title is of the first level, and hyphens (\u0026#34;-\u0026#34;) if the title is of the second level. The number of underscores is not limited.\nWhen selecting headers using the symbol (\u0026#34;#\u0026#34;), from one to six of these characters are used, which are set at the beginning of the line (before the header). In this case, the number of characters corresponds to the header level. In addition, it is possible to provide the title with closing characters (\u0026#34;#\u0026#34;), although this is not mandatory. The number of closing characters does not have to match the number of initial characters. The level of the header is determined by the number of initial characters.\nThe headings of the first and second levels, made using underscores, look like this:\nFirst level header ======================== Second level header -------------------------  The headings of the first, third and sixth levels, made using the symbol (\u0026#34;#\u0026#34;), look like this:\n# First level header ### Third level header ###### Sixth level header  The above headings made with the symbol (\u0026#34;#\u0026#34;) are identical to the following:\n# First level header # ### Third level header ### ###### Sixth level header ######  As a result, the following is displayed on the screen:\nFirst level header Second level header First level header Third level header Sixth level header Quotes The Markdown language uses the “more” (\u0026#34;\u0026gt;\u0026#34;) sign to indicate quotations. It can be inserted both before each line of the quotation, and only before the first line of the paragraph.\nAlso, the Markdown syntax allows you to create nested quotes (quotes inside quotes). Additional levels of citation marks (\u0026#34;\u0026gt;\u0026#34;) are used to mark them.\nQuotes in Markdown can contain all kinds of markup elements.\nQuotes in the Markdown language look like this:\n\u0026gt;This is an example of a quote, \u0026gt; in which an angle bracket is placed before each line. \u0026gt;This is an example of a quote in which the angle bracket it is put only before the beginning of a new paragraph. \u0026gt;The second paragraph.  Embedding a quote into a quote looks like this:\n\u0026gt; First level of citation \u0026gt;\u0026gt; Second level of citation \u0026gt;\u0026gt;\u0026gt; Third level of citation  As a result, the following is displayed on the screen:\n This is an example quote, in which before each line an angle bracket is placed.\n  This is an example of a quote in which an angle bracket is placed just before the beginning of a new paragraph.\n  The second paragraph.\n Enclosed quote:\n First Citation level\n Second level of citation\n Third Citation Level\n  First Citation Level\n The citation level cannot exceed the 15th.\nLists Markdown supports ordered (numbered) and unordered (unnumbered) lists.\nMarkers such as asterisks, pluses and hyphens are used to form unordered lists. All the listed markers can be used interchangeably.\nTo form ordered lists, numbers with a dot are used as markers. An important feature in this case is that the numbers themselves, with which the list is formed, are not important, since they do not affect the output HTML code. No matter how the user numbers the list, the output will in any case have an ordered list starting with one (1, 2, 3 …). This feature should be taken into account when it is necessary to use the ordinal numbers of elements in the list so that they correspond to the numbers obtained in HTML.\nOrdered lists should always start with one. List markers usually start from the beginning of the line, however, they can be shifted, but not more than 3 spaces\n1. Explorer 2. Semiconductor 3. Dielectric  The unordered lists look like this:\n* …","date":1652400000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652400000,"objectID":"28604f3bf16cf53ef3b3b2db69e92fd3","permalink":"https://example.com/post/getting-started-3-%D1%8F-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","publishdate":"2022-05-13T00:00:00Z","relpermalink":"/post/getting-started-3-%D1%8F-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","section":"post","summary":"Markdown is a lightweight markup language that is a tool for converting code to HTML.","tags":["Academic"],"title":"Report in markdown","type":"post"},{"authors":["Galina Leginkikh"],"categories":["Demo"],"content":"Markdown  Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form. Markdown is widely used in blogging, instant messaging, online forums, collaborative software, documentation pages, and readme files.\nThe initial description of Markdown contained ambiguities and raised unanswered questions, causing implementations to both intentionally and accidentally diverge from the original version. This was addressed in 2014, when long-standing Markdown contributors released CommonMark, an unambiguous specification and test suite for Markdown.\nHistory  n 2002 Aaron Swartz created atx, “the true structured text format”. Swartz and Gruber then worked together to create the Markdown language in 2004, with the goal of enabling people “to write using an easy-to-read and easy-to-write plain text format, optionally convert it to structurally valid XHTML (or HTML)”.\nIts key design goal was readability, that the language be readable as-is, without looking like it has been marked up with tags or formatting instructions, unlike text formatted with a markup language, such as Rich Text Format (RTF) or HTML, which have obvious tags and formatting instructions. To this end, its main inspiration is the existing conventions for marking up plain text in email, though it also draws from earlier markup languages, notably setext, Textile, and reStructuredText.\nGruber wrote a Perl script, Markdown.pl, which converts marked-up text input to valid, well-formed XHTML or HTML and replaces angle brackets (\u0026lt;, \u0026gt;) and ampersands (\u0026amp;) with their corresponding character entity references. It can take the role of a standalone script, a plugin for Blosxom or a Movable Type, or of a text filter for BBEdit.\nRise and divergence  As Markdown’s popularity grew rapidly, many Markdown implementations appeared, driven mostly by the need for additional features such as tables, footnotes, definition lists, and Markdown inside HTML blocks.\nThe behavior of some of these diverged from the reference implementation, as Markdown was only characterised by an informal specification and a Perl implementation for conversion to HTML.\nAt the same time, a number of ambiguities in the informal specification had attracted attention. These issues spurred the creation of tools such as Babelmark to compare the output of various implementations, and an effort by some developers of Markdown parsers for standardisation. However, Gruber has argued that complete standardization would be a mistake: “Different sites (and people) have different needs. No one syntax would make all happy.”\nStandardization  From 2012, a group of people, including Jeff Atwood and John MacFarlane, launched what Atwood characterised as a standardisation effort. A community website now aims to “document various tools and resources available to document authors and developers, as well as implementors of the various Markdown implementations”. In September 2014, Gruber objected to the usage of “Markdown” in the name of this effort and it was rebranded as CommonMark. CommonMark.org published several versions of a specification, reference implementation, test suite, and \u0026#34; to announce a finalized 1.0 spec and test suite in 2019.\u0026#34; No 1.0 spec has since been released as major issues still remain unsolved. Nonetheless, the following sites and projects have adopted CommonMark: Discourse, GitHub, GitLab, Reddit, Qt, Stack Exchange (Stack Overflow), and Swift.\nIn March 2016 two relevant informational Internet RFCs were published:\n  RFC 7763 introduced MIME type text/markdown.\n  RFC 7764 discussed and registered the variants MultiMarkdown, GitHub Flavored Markdown (GFM), Pandoc, and Markdown Extra among others.\n  Implementations  Implementations of Markdown are available for over a dozen programming languages; in addition, many platforms and frameworks support Markdown. For example, Markdown plugins exist for every major blogging platform.\nWhile Markdown is a minimal markup language and is read and edited with a normal text editor, there are specially designed editors that preview the files with styles, which are available for all major platforms. Many general purpose text and code editors have syntax highlighting plugins for Markdown built into them or available as optional download. Editors may feature a side-by-side preview window or render the code directly in a WYSIWYG fashion.\n  JotterPad – an online WYSIWYG editor that supports Markdown and fountain.\n  Doxygen – a source code documentation generator which supports Markdown with extra features.\n  RStudio – an IDE for R. It provides a C++ wrapper function for a markdown variant called sundown.\n  GitHub Flavored Markdown (GFM) ignores underscores in words, and adds syntax highlighting, task lists, and tables RMarkdown.\n  Nextcloud Notes - the default app for taking notes on the Nextcloud platform …","date":1652313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"af2400099b9817f92b365f10297a4a53","permalink":"https://example.com/post/getting-started-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F1/","publishdate":"2022-05-12T00:00:00Z","relpermalink":"/post/getting-started-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F1/","section":"post","summary":"Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form. Markdown is widely used in blogging, instant messaging, online forums, collaborative software, documentation pages, and readme files.","tags":["Academic"],"title":"Markdown","type":"post"},{"authors":["Galina Leginkikh"],"categories":["Demo"],"content":"My week  This week I went home, rested with my family. In my free time, I was engaged in self-development, as I did laboratory work in advance. I have read Unix literature. Had a lot of fun with my best friends.\nI think this week has passed by 100%. I had a very good rest.\n   ","date":1652313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"e353871dd05f1a0ecac262c154be1b71","permalink":"https://example.com/post/getting-started-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","publishdate":"2022-05-12T00:00:00Z","relpermalink":"/post/getting-started-%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/","section":"post","summary":"This week was all about relaxation.","tags":["Academic"],"title":"My week 2.05.2022 - 8.05.2022 (Этап 3)","type":"post"},{"authors":["Galina Leginkikh"],"categories":["Demo"],"content":"Git  Git is a software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).\nHistory  Git development began in April 2005, after many developers of the Linux kernel gave up access to BitKeeper, a proprietary source-control management (SCM) system that they had been using to maintain the project since 2002. The copyright holder of BitKeeper, Larry McVoy, had withdrawn free use of the product after claiming that Andrew Tridgell had created SourcePuller by reverse engineering the BitKeeper protocols. The same incident also spurred the creation of another version-control system, Mercurial.\nLinus Torvalds wanted a distributed system that he could use like BitKeeper, but none of the available free systems met his needs. Torvalds cited an example of a source-control management system needing 30 seconds to apply a patch and update all associated metadata, and noted that this would not scale to the needs of Linux kernel development, where synchronizing with fellow maintainers could require 250 such actions at once. For his design criterion, he specified that patching should take no more than three seconds, and added three more goals:\nTake Concurrent Versions System (CVS) as an example of what not to do; if in doubt, make the exact opposite decision. Support a distributed, BitKeeper-like workflow. Include very strong safeguards against corruption, either accidental or malicious. These criteria eliminated every version-control system in use at the time, so immediately after the 2.6.12-rc2 Linux kernel development release, Torvalds set out to write his own.\nThe development of Git began on 3 April 2005. Torvalds announced the project on 6 April and became self-hosting the next day. The first merge of multiple branches took place on 18 April. Torvalds achieved his performance goals; on 29 April, the nascent Git was benchmarked recording patches to the Linux kernel tree at the rate of 6.7 patches per second. On 16 June, Git managed the kernel 2.6.12 release.\nTorvalds turned over maintenance on 26 July 2005 to Junio Hamano, a major contributor to the project. Hamano was responsible for the 1.0 release on 21 December 2005 and remains the project’s core maintainer.\nDesign  Git’s design was inspired by BitKeeper and Monotone. Git was originally designed as a low-level version-control system engine, on top of which others could write front ends, such as Cogito or StGIT. The core Git project has since become a complete version-control system that is usable directly. While strongly influenced by BitKeeper, Torvalds deliberately avoided conventional approaches, leading to a unique design.\nImplementations  Git (the main implementation in C) is primarily developed on Linux, although it also supports most major operating systems, including the BSDs (DragonFly BSD, FreeBSD, NetBSD, and OpenBSD), Solaris, macOS, and Windows.\nThe first Windows port of Git was primarily a Linux-emulation framework that hosts the Linux version. Installing Git under Windows creates a similarly named Program Files directory containing the Mingw-w64 port of the GNU Compiler Collection, Perl 5, MSYS2 (itself a fork of Cygwin, a Unix-like emulation environment for Windows) and various other Windows ports or emulations of Linux utilities and libraries. Currently, native Windows builds of Git are distributed as 32- and 64-bit installers. The git official website currently maintains a build of Git for Windows, still using the MSYS2 environment.\nThe JGit implementation of Git is a pure Java software library, designed to be embedded in any Java application. JGit is used in the Gerrit code-review tool, and in EGit, a Git client for the Eclipse IDE.\nGo-git is an open-source implementation of Git written in pure Go. It is currently used for backing projects as a SQL interface for Git code repositories and providing encryption for Git.\nThe Dulwich implementation of Git is a pure Python software component for Python 2.7, 3.4 and 3.5.\nThe libgit2 implementation of Git is an ANSI C software library with no other dependencies, which can be built on multiple platforms, including Windows, Linux, macOS, and BSD. It has bindings for many programming languages, including Ruby, Python, and Haskell.\nJS-Git is a JavaScript implementation of a subset of Git.\nSecurity  Git does not provide access-control mechanisms, but was designed for operation with other tools that specialize in access control.\nOn 17 December 2014, an exploit was found affecting the Windows and macOS versions of the Git client. An attacker could perform arbitrary code execution on a target computer with Git installed by creating a malicious Git tree (directory) named .git (a directory in Git repositories that stores all the data of the repository) in a …","date":1652227200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652227200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2022-05-11T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Git is a software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development.","tags":["Academic"],"title":"Git","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Galina Leginkikh","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]